Revision history for Data-Integer:

  [Documentation]
  - Updated maintainer information.

  - Reformatted Changes to conform to CPAN::Changes::Spec.

  [Toolchain]
  - Switched to use Makefile.PL.

  - Cleaned up MANIFEST.

0.006    2017-08-07

  - no longer include a Makefile.PL in the distribution

  - in documentation, use four-column indentation for all verbatim
    material

  - in META.{yml,json}, point to public bug tracker

0.005    2015-03-29

  - avoid a spurious warning generated by new Perls starting with
    Perl 5.21.6

  - include META.json in distribution

  - convert .cvsignore to .gitignore

  - add MYMETA.json to .cvsignore

0.004    2010-07-26

  - in documentation of {s,u}int_msub(), correct description that said
    "addition" instead of "subtraction"

  - in synopsis, correct number of parameters for {s,u}int_mux()

  - use simpler "parent" pragma in place of "base"

  - in documentation, use the term "truth value" instead of the less
    precise "boolean"

  - check for required Perl version at runtime

  - use full stricture in test suite

  - use full stricture in Build.PL

  - in Build.PL, explicitly declare configure-time requirements

  - remove bogus "exit 0" from Build.PL

  - add MYMETA.yml to .cvsignore

0.003    2007-10-26

  - add natint_hex() and hex_natint() functions to output and input
    integer values in hexadecimal

  - add functions {n,s,u}int() to check and canonicalise native integer
    function arguments

  - add functions nint_is_{s,u}int() for classification of native integers

  - add functions {n,s,u}int_sgn(), {n,s,u}int_abs(), {n,s,u}int_cmp(),
    {n,s,u}int_min(), {n,s,u}int_max(), {n,s,u}int_neg(),
    {n,s,u}int_add(), {n,s,u}int_sub() for ordinary arithmetic on
    native integers

  - add functions {s,u}int_shl(), {s,u}int_shr(), {s,u}int_rol(),
    {s,u}int_ror() for bit shifts on native integers

  - add functions {n,u}int_bits_as_sint() and {n,s}int_bits_as_uint()
    for format conversions among native integers

  - add functions {s,u}int_not(), {s,u}int_and(), {s,u}int_nand(),
    {s,u}int_andn(), {s,u}int_or(), {s,u}int_nor(), {s,u}int_orn(),
    {s,u}int_xor(), {s,u}int_nxor(), {s,u}int_mux() for bitwise operations
    on native integers

  - add functions {s,u}int_madd(), {s,u}int_msub(), {s,u}int_cadd(),
    {s,u}int_csub(), {s,u}int_sadd(), {s,u}int_ssub() for machine-code
    style arithmetic on native integers

  - add short names (m{in,ax}_{n,s,u}int) for the extreme-value constants

  - revise the way the constants are generated to avoid floating point
    arithmetic

  - make extreme-value constants into non-constant functions that return
    fresh integer values, to avoid problems with Perl's side effects
    when an integer value is used in floating point arithmetic

  - in documentation, discuss Perl's problems in handling native integer
    values

  - in documentation, describe the integer formats

  - test consistency of constants in a more reliable and stringent manner,
    using primarily integer arithmetic

  - rearrange module source to avoid the need for the DATA filehandle

0.002    2007-09-27

  - test POD syntax and coverage

  - build with Module::Build instead of ExtUtils::MakeMaker

  - complete dependency list

  - include signature in distribution

  - in documentation, separate "license" section from "copyright" section

0.001    2007-01-24

  - bugfix: strategic use of "use integer" to make the arithmetic work
    right on perl 5.6

  - reference Data::Float, Scalar::Number, and perlnumber(1) in
    documentation

0.000    2007-01-09

  - initial released version
